 the criticality of the system to the business and establish alternative arrangements (e.g., source code escrow, manual workarounds, etc.) to meet business needs.

Cloud Computing

5.2.10 Cloud computing service providers offer a variety of services that come with varied responsibilities depending on the service model adopted, often referred to as the ‘shared responsibility model’. A financial institution should have full clarity on its responsibilities prior to subscribing to or entering into any cloud computing service arrangement.

5.2.11 Like any other sourcing or third-party arrangement, a financial institution should ensure that the cloud computing service arrangement is aligned with its business strategy and adequate due diligence is performed on the cloud computing service provider prior to entering into the arrangement.

5.2.12

In addition to the service model9, a financial institution should choose a deployment model (e.g., public, community, private, edge, multi-cloud, hybrid, etc.) most appropriate to its needs and ensure that the cloud computing service provider at least logically segregates the financial institution’s cloud deployment and data from other customers.

5.2.13 Regardless of service or deployment model, a financial institution should have clarity on the location of its workload and data at all times. As a financial institution’s deployment in the cloud becomes more complex and makes use of features that may only be available in specific geographic locations, a proper accounting of assets in the cloud will prevent unaccounted assets being exploited by threat actors.

5.2.14 Given the ease in which assets can be created, deployed, altered, and removed in the cloud, financial institutions should consider adopting cloud access security broker solutions to provide visibility and control over data and threats in the cloud.

5.2.15 Where a multi-cloud strategy is adopted, a financial institution should ensure that the differences of each cloud computing service used are taken into account when developing solutions for multi-cloud deployment. A financial institution that uses abstraction tools to manage its multi-cloud deployment should be cognisant that some cloud-native security features may be missed by the abstraction tools and take mitigating actions to rectify such omissions.

5.2.16 A financial institution should ensure that it has appropriate technical competencies to operate the chosen cloud computing service(s). For example, subscription to

9 The common service models are Infrastructure-as-a-Service (“IaaS”), Platform-as-a-Service (“PaaS”), and Software-as-a-Service (“SaaS”).

34

VER01.201124

infrastructure-as-a-service where it is the financial institution’s responsibility to architect and build solutions requires significantly greater technical competence than a subscription to a platform-as-a-service or software-as-a-service. Additionally, expertise in the use of one cloud computing service may not translate fully to another cloud computing service.

System Development

5.2.17 A financial institution should establish a framework to ensure that all system development projects adhere to clearly defined processes, procedures, and controls for each phase of the project cycle. Such a framework should be specific to the development methodology (e.g., waterfall, agile, DevSecOps, Scrum, Lean, etc.) or tools (e.g., coding tools, documentation repositories, continuous integration and testing tools, etc.) that the financial institution uses for projects.

5.2.18 All IT projects should take IT security considerations into account throughout the development cycle. Such a security-by-design approach enables the financial institution to reduce the likelihood of gaps in security downstream when the system or service is deployed. Appropriate staff should be involved in making regular security assessments at each phase of the project to ensure security requirements are met. Such security assessments should identify and record potential threats and risks applicable to the system being developed, and the appropriate security controls for mitigation.

5.2.19 When designing the system, a financial institution should work with relevant business functions to define and document various requirements, including functional, non- functional, performance, and resilience requirements. The relevant IT staff should assess how the system being developed would fit within the existing technology infrastructure to avoid potential conflicts during testing and integration. Depending on the scale and complexity, a financial institution may consider engaging third parties to assist in designing and/or reviewing the system architecture.

5.2.20 To prevent data or system conflicts, development work should be performed in an environment physically or logically separate from the live IT environment running production systems and data.

5.2.21 A financial institution should establish procedures on versioning and change control during development to ensure