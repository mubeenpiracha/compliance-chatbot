, non- functional, performance, and resilience requirements. The relevant IT staff should assess how the system being developed would fit within the existing technology infrastructure to avoid potential conflicts during testing and integration. Depending on the scale and complexity, a financial institution may consider engaging third parties to assist in designing and/or reviewing the system architecture.

5.2.20 To prevent data or system conflicts, development work should be performed in an environment physically or logically separate from the live IT environment running production systems and data.

5.2.21 A financial institution should establish procedures on versioning and change control during development to ensure detailed tracking of releases and only authorised staff have access to perform such activities.

5.2.22 During development, the financial institution may require programming activities to build software components or configurations to integrate with other systems. To ensure safe and secure development, the financial institution should establish rules and standards, procedures and best practices that would guide staff or third parties who perform programming activities. This can include hardening standards from established industry bodies, code review practices, and static or dynamic application security testing.

35

VER01.201124

5.2.23 A financial institution should ensure that code repositories are regularly backed up, securely administered and accessed only by authorised personnel through strong authentication mechanisms. Code scanning and secret scanning tools should be used to identify vulnerabilities/errors and secret keys/tokens respectively. A financial institution should store secrets in secure location separate from the source code repository with stringent access controls in place.

5.2.24 A financial institution leveraging on open-source code, libraries, software or hardware should perform a compatibility and security vulnerability assessment prior to incorporation and implementation into the financial institution’s environment. A financial institution’s change and patch management programmes should account for the use of such open-source products and appropriate action should be taken to mitigate risks arising from open-source products that are not supported with regular updates for enhancements or security.

5.2.25 Where an open-source programme10 is established, a financial institution should establish policies and procedures on what source code is permitted for publication and ensure that doing so would not result in threat actors being able to exploit such code to circumvent the financial institution’s security controls or inadvertently expose sensitive data.

5.2.26 A financial institution that relies on a third party to perform development should obtain assurance on the development practices of the third party prior to engagement (e.g., independent audits on the third party, certifications, etc.) and have procedures in place to monitor and review the activities performed by the third party.

System testing

5.2.27 A financial institution should test each system prior to deployment into its live IT environment. As with the development stages, the testing stage should also include relevant business and security functions to ensure that the system meets the defined functional, performance, security, and resilience requirements. IT security staff should also test security controls to ensure the identified threats and risks are adequately mitigated.

5.2.28 Depending on the project, the financial institution should assess the types of testing required (e.g., unit test, input/output validation, access and authentication test, performance test, integration test, regression test, penetration test, acceptance test, etc.) and which stage of the project to perform such testing. For sourced systems, the scope and nature of testing should be commensurate to the risk profile and deployment approach.

10 Organisations that establish an internal open-source programme allow developers to contribute code to the public as a form of support for the open-source community. Such contributions can glean benefits such as feedback for enhancing the published code which can in turn benefit the organisation.

36

VER01.201124

5.2.29 A financial institution should ensure that access to test results should be stringently controlled commensurate with the potential for leakage of sensitive data, system design, or security controls.

5.2.30 To prevent data or system conflicts, systems should be tested in an environment physically or logically separate from the live IT environment running production systems and data.

5.2.31 All issues noted during testing (software bugs, configuration errors, etc.) should be tracked and resolved. Where an issue cannot be resolved, the financial institution should ensure that any deviations from the established functional, performance, security, and resilience requirements are approved by an appropriate level of management prior to system deployment in the production environment.

5.2.32 Following testing, a financial institution should ensure that all deployments and updates to the IT environment adhere to established procedures.